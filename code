 # Visualize customer segmentation using scatter plots
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='Segment', y='Gender', hue='Segment', palette='Set1')
plt.title('Segment vs Gender')
plt.xlabel('Segment')
plt.ylabel('Gender')
plt.legend(title='Segment')
plt.show()

 # Visualize customer segmentation using pie charts 
gender_segment_counts = df.groupby(['Gender', 'Segment']).size().unstack(fill_value=0)
print(gender_segment_counts)
for gender in gender_segment_counts.index:
    data = gender_segment_counts.loc[gender]
    plt.figure(figsize=(8, 6))
    plt.pie(data, labels=data.index, autopct='%1.1f%%', startangle=140)
    plt.title(f'Customer Segments Distribution for {gender}')
    plt.show()

 # Create bar charts to compare sales performance across different customer segments.
plt.figure(figsize=(10,6))
sns.barplot(x='Segment', y='Sales Performance', data=df)
plt.xlabel('Segment')
plt.ylabel('Sales Performance')
plt.title('Average sales performance')
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

 # visualize average customer age by category using line chart.
age_by_segment = df.groupby('Segment')['Age'].mean()
age_by_segment.plot(kind='line', marker='o', figsize=(10, 6))
plt.title('Average Customer Age by Category')
plt.xlabel('Category')
plt.ylabel('Average Age')
plt.grid(True)
plt.xticks(rotation=45)  # Rotate x-axis labels for better readability
plt.tight_layout()
plt.show()

 # visualize frequency of purchase by gender using violin plot.
plt.figure(figsize=(10, 8))
sns.violinplot(data=df, x='Gender', y='Frequency of Purchases', palette='Set2')
plt.xlabel('Gender')
plt.ylabel('Purchase Frequency')
plt.title('Comparison of Purchase Frequency by Gender')
plt.show()
